name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Check
      run: cargo check --all --verbose
    - name: Build
      run: cargo build --all --verbose
  test_inner_core:
    name: Test Inner Core
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: install dynamic libs
        run: sudo apt-get install -y libgc1 libgc-dev
      - name: Run tests
        run: cargo test -p evolve_inner_core --verbose
  test_outer_core_libgc:
    name: Test Outer Core libgc
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: install dynamic libs
        run: sudo apt-get install -y libgc1 libgc-dev
      - name: Run tests
        run: cargo test -p evolve_outer_core --features="libgc_alloc" --verbose -- --test-threads=1

  test_outer_core_libc:
    name: Test Outer Core libc
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: install dynamic libs
        run: sudo apt-get install -y libgc1 libgc-dev
      - name: Run tests
        run: cargo test -p evolve_outer_core --features="libc_alloc" --verbose
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cargo Clippy
        run: cargo clippy --all
#  audit:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      issues: write
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions-rust-lang/audit@v1
#        name: Audit Rust Dependencies
#        with:
#          # Comma separated list of issues to ignore
#          ignore: RUSTSEC-2020-0036